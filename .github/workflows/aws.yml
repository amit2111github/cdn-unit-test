name: Run Vitest Tests

on:
  push:
    branches: [main]

jobs:
  test:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: ⬇️ Create .env file
        run: |
          echo "${{ secrets.ENV_FILE }}" > backend/.env
          echo "ENV=test" >> backend/.env
          mkdir -p backend/cloudfront-key
          echo "${{ secrets.CLOUDFRONT_PRIVATE_KEY}}" > backend/cloudfront-key/private_key.pem
          echo "ENV=test" >> backend/.env
          echo "printing .env file"
          cat backend/.env

      - name: Use Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '18'

      - name: 📦 Install dependencies
        run: npm install
        working-directory: backend

      - name: 🧪 Run Vitest
        run: npm run test
        working-directory: backend

  deploy:
    needs: test
    runs-on: ubuntu-latest
    env:
      ENV: prod

    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Configure AWS Credentials
        uses: aws-actions/configure-aws-credentials@v2
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: ${{ secrets.AWS_REGION }}
      
      - name: Get EC2 Public IP by tag
        id: get-ip
        run: |
          IP=$(aws ec2 describe-instances \
          --filters "Name=tag:Name,Values=${{ secrets.EC2_TAG_NAME }}" "Name=instance-state-name,Values=running" \
          --query "Reservations[0].Instances[0].PublicIpAddress" \
          --output text)
          echo "EC2_IP=$IP" >> $GITHUB_ENV

      - name: Use Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '18'

      - name: 🔐 Setup SSH
        run: |
          mkdir -p ~/.ssh
          echo "${{ secrets.EC2_SSH_KEY }}" > ~/.ssh/id_rsa
          chmod 600 ~/.ssh/id_rsa
          ssh-keyscan -H $EC2_IP >> ~/.ssh/known_hosts

      - name: 🚀 Deploy to EC2
        run: |
          echo "ip address is $EC2_IP"
          ssh -i ~/.ssh/id_rsa ${{ secrets.EC2_USER }}@$EC2_IP << 'EOF'
            set -e
            echo "installing node.js"
            if ! command -v node > /dev/null; then
              curl -fsSL https://deb.nodesource.com/setup_18.x | sudo -E bash -
              sudo apt-get install -y nodejs
            fi
            if ! command -v nginx > /dev/null; then
              sudo apt-get update -y
              sudo apt-get install -y nginx
            fi
            
            mkdir -p /home/ubuntu/app
            cd /home/ubuntu/app
            echo "cloning repo"
            if [ ! -d "./.git" ]; then
              echo "No Git repo found. Cloning..."
              echo "cloning "
              git clone "https://github.com/amit2111github/cdn-unit-test" .
            fi
            git stash
            git pull origin main
            cd backend
            sudo tee /etc/nginx/nginx.conf < nginx.conf > /dev/null
            mkdir -p http-certificate
            echo "adding certficates for https"
            echo "${{ secrets.CERTIFICATES_PUBLIC }}" >  http-certificate/certificate.crt
            echo "${{ secrets.CERTIFICATES_PRIVATE }}" >  http-certificate/private.key

            echo "${{ secrets.ENV_FILE }}" > .env
            echo "ENV=prod" >> .env
            mkdir -p cloudfront-key
            echo "${{ secrets.CLOUDFRONT_PRIVATE_KEY}}" > cloudfront-key/private_key.pem
            npm install --production
            echo "Running npm start"
            sudo systemctl restart nginx
            npm run start
          EOF
